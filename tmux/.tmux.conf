set-option -g default-shell $SHELL

# Set TERM properly, or programs in tmux will mess up colors {{{
## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
## determine if we should enable 256-colour support
# The weird invocation is because tmux runs the command through sh and [[ isn't supported in sh.
# Trying to use just sh tools is slightly convoluted compared to the bashism. Sorry.
if-shell "bash -c '[[ ${TERM} =~ 256color || ${TERM} == fbterm || ${TERM} == xterm-termite ]]'" 'set -g default-terminal screen-256color' 'set -g default-terminal screen'
# }}}

## Set mouse and utf8 options {{{
# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
# Thanks to http://stackoverflow.com/a/40902312
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"
# }}}

set-option -sg escape-time 300
set -g history-limit 10000

# Set window titles
set-option -g set-titles on

# Please generate and send xterm-style keycodes
set-option -wg xterm-keys on

# Act like vim {{{
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
unbind [
bind ` copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
# }}}

# after copying to a tmux buffer, hit y again to copy to clipboard
bind y run "tmux save-buffer - | xclip"

# Tmux Plugin Manager plugins {{{
# prefix + I to install
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# prefix + alt + c         - clear pane history
# prefix + alt + p         - screen capture current pane
# prefix + shift + p       - toggle logging current pane
# prefix + alt + shift + p - complete pane history
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-pain-control'
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
#   Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + S (shift + s) - switches to the last session.
#   The same as built-in prefix + L that everyone seems to override with some other binding.
# prefix + @ - promote current pane into a new session.
#   Analogous to how prefix + ! breaks current pane to a new window.
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Check if tpm is there, install it otherwise.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}

# vim: set fdm=marker ft=conf foldlevel=0:
